pipeline {
  agent any
  environment {
    PATH = "/bin:/usr/sbin:/usr/bin:/usr/local/bin:/usr/local/texlive/2016/bin/x86_64-darwin/"
  }
  stages {
    stage('Build') {
      steps {
        sh 'echo Building'
      }
    }
    stage('Test'){
      steps {
        sh 'make testcover'
        sh '(pylint --rcfile=.pylintrc grmodel > pylint.log || echo "pylint exited with $?")'
        step([
          $class: 'WarningsPublisher',
          parserConfigurations: [[parserName: 'PYLint', pattern: 'pylint.log']],
          unstableTotalAll: '1000',
          usePreviousBuildAsReference: true])
        step([
          $class: 'CoberturaPublisher',
          autoUpdateHealth: true,
          autoUpdateStability: true,
          coberturaReportFile: 'coverage.xml',
          failNoReports: true,
          failUnhealthy: true,
          failUnstable: true,
          maxNumberOfBuilds: 0,
          onlyStable: false,
          sourceEncoding: 'UTF_8',
          zoomCoverageChart: true])
        step([
          $class: 'TasksPublisher',
          canComputeNew: false,
          defaultEncoding: '', 
          excludePattern: '',
          healthy: '',
          high: 'TODO,FIXME,XXX',
          low: '',
          normal: 'CITE',
          pattern: '**/*.py, **/*.md',
          unHealthy: ''])
        }
      }
    stage('Profile') {
      steps {
        sh 'make profile'
        archiveArtifacts artifacts: 'profile.png', onlyIfSuccessful: true
      }
    }
      stage('Deploy') {
        steps {
          sh 'echo "Deploy step"'
        }
      }
    }
  }
