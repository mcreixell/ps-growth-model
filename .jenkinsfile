pipeline {
  agent any
  stages {
    stage('Clean') { steps { sh 'git clean -ffdx && make clean && git submodule update --init --recursive' } }
    stage('Venv')  { steps { sh 'make venv' } }
    stage('Build/Test/Lint') {
        steps {
            sh 'make all -j 4'
            junit allowEmptyResults: false, testResults: 'junit.xml'
            cobertura coberturaReportFile: 'coverage.xml', failUnhealthy: false, failUnstable: false, maxNumberOfBuilds: 0, onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
            recordIssues qualityGates: [[threshold: 5, type: 'TOTAL_HIGH', unstable: true], [threshold: 130, type: 'TOTAL', unstable: true]], tools: [pyLint(pattern: 'pylint.log')]
        }
    }
    stage('Doc')   { steps { sh 'make doc' } }
    stage('Report') {
      steps {
        archiveArtifacts artifacts: 'Manuscript/Figures/*.pdf', onlyIfSuccessful: true
        publishHTML([allowMissing:false, alwaysLinkToLastBuild:false, keepAll:true,
        reportDir:'doc/build', reportFiles:'index.html', reportName:'Documentation', reportTitles:''])
      }
    }
  }
  post {
    always {
      cleanWs cleanWhenFailure: false, cleanWhenNotBuilt: false, cleanWhenUnstable: false
    }
  }
}
